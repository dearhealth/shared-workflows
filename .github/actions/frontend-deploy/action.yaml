name: "run-frontend-ci"
description: "Builds and deploys FE project"

inputs:
  env:
    required: true
  region:
    required: true
  role-to-assume:
    required: true
  aws-account-id:
    required: true
  service-name:
    required: true
  cfn-role:
    required: true
  public:
    required: true
  build-target:
    required: true
  build-output-folder:
    required: true
  
runs:
  using: "composite"
  steps:
  - name: checkout
    uses: actions/checkout@v3
  - uses: actions/setup-node@v3
    with:
      node-version: '16'    
      cache: 'npm'
  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      role-to-assume: ${{inputs.role-to-assume}}
      aws-region: ${{inputs.region}}
  - run: aws codeartifact login --region us-east-1 --tool npm --domain dh-artifacts --domain-owner ${{inputs.code-artifacts-account-id}} --repository npm-store
    shell: bash
  - run: npm install
    shell: bash
  - run: npm run build:${{ inputs.build-target }}
    shell: bash
  - run: echo "WEB_BUCKET_NAME=dh-${{ inputs.env }}-${{ inputs.service-name }}-${{ inputs.aws-account-id }}-${{ inputs.region }}" >> $GITHUB_ENV
    shell: bash
  - run: echo "STACK_NAME=dh-${{ inputs.env }}-${{ inputs.service-name }}" >> $GITHUB_ENV
    shell: bash
  - run: echo "S3_BUCKET_NAME=$(aws cloudformation list-exports --region ${{ inputs.region }} --query "Exports[?Name=='dh-${{ inputs.env }}-${{ inputs.service-name }}-s3-bucket-name'].Value" --no-paginate --output text)" >> $GITHUB_ENV
    shell: bash
  - run: echo DISTRIBUTION_ID=$(aws cloudformation list-exports --region ${{ inputs.region }} --query "Exports[?Name=='dh-${{ inputs.env }}-${{ inputs.service-name }}-distribution-id'].Value" --no-paginate --output text) >> $GITHUB_ENV
    shell: bash
  - run: aws cloudformation deploy --template-file cloudformation/template.yml --stack-name ${{ env.STACK_NAME }} --region ${{ inputs.region }} --capabilities CAPABILITY_NAMED_IAM --role-arn ${{ inputs.cfn-role }} --parameter-overrides EnvId=${{ inputs.env }} Public=${{ inputs.public }} WebBucketName=${{ env.WEB_BUCKET_NAME }}
    shell: bash
  - run: aws s3 sync ${{ inputs.build-output-folder }} "s3://${{ env.S3_BUCKET_NAME }}"
    shell: bash
  - run: aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"
    shell: bash
