name: "run-contentful-to-gatsby-deployment"
description: "Extracts content from Contentful and creates a gatsby Website out of it."

inputs:
  env:
    required: true
  region:
    required: true
  role-to-assume:
    required: true
  aws-account-id:
    required: true
  portal-type:
    required: true
  portal-name:
    required: true
  cfn-role:
    required: true
  contentful-space-id:
    required: true
  contentful-access-token:
    required: true

runs:
  using: "composite"
  steps:
  - name: checkout
    uses: actions/checkout@v3
  - uses: actions/setup-node@v3
    with:
      node-version: '16'    
      cache: 'npm'
  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      role-to-assume: ${{inputs.role-to-assume}}
      aws-region: ${{inputs.region}}
  - shell: bash
    run: |
      echo "Setting env vars for Cloudormation DATA Stack deployment"
      echo "STACK_NAME=${{inputs.portal-name}}-${{inputs.portal-type}}-data-stack" >> $GITHUB_ENV
      echo "WEB_BUCKET_NAME=${{inputs.portal-name}}-${{inputs.portal-type}}-${{ inputs.aws-account-id }}" >> $GITHUB_ENV
      echo "S3_CANONICAL_USER_IDS_SSM_PATH=/dh/infra/myacademy-${{inputs.portal-type}}-s3-canonical-user-ids" >> $GITHUB_ENV

  - shell: bash
    run: |
      echo "Starting Cloudormation DATA Stack deployment..."
      aws cloudformation deploy --template-file cf_templates/data.yml --region ${{ inputs.region }} --stack-name ${{ env.STACK_NAME }} --capabilities CAPABILITY_NAMED_IAM --role-arn ${{ inputs.cfn-role }} --parameter-overrides BucketName=${{ env.WEB_BUCKET_NAME }}

  - shell: bash
    run: |
      echo "Starting GATSBY build....."
      npm install
      
      CONTENTFUL_SPACE_ID=${{ inputs.contentful-space-id }} \
      CONTENTFUL_ACCESS_TOKEN=${{ inputs.contentful-access-token }} \
      npm run build

      aws s3 sync public s3://${{ env.WEB_BUCKET_NAME }}
      echo "S3 bucket sync complete..."
      echo "--------------------- Deployment completed successfully in region ${{ inputs.region }} ---------------------------"

  - shell: bash
    run: |
      echo "Invalidating cloudfront edge cache..."
